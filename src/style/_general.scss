/* ------------------- */
/* Utility classes     */
/* ------------------- */

/* general */

.content-grid {
  --padding-inline: 1rem;
  --content-max-width: 900px;
  --breakout-max-width: 1200px;

  --breakout-size: calc(
    (var(--breakout-max-width) - var(--content-max-width)) / 2
  );

  display: grid;
  grid-template-columns:
    [full-width-start] minmax(var(--padding-inline), 1fr)
    [breakout-start] minmax(0, var(--breakout-size))
    [content-start] min(
      100% - (var(--padding-inline) * 2),
      var(--content-max-width)
    )
    [content-end]
    minmax(0, var(--breakout-size)) [breakout-end]
    minmax(var(--padding-inline), 1fr) [full-width-end];
}

.content-grid > :not(.breakout, .full-width),
.full-width > :not(.breakout, .full-width) {
  grid-column: content;
}

.content-grid > .breakout {
  grid-column: breakout;
}

.content-grid > .full-width {
  grid-column: full-width;

  display: grid;
  grid-template-columns: inherit;
}

.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.d-block {
  display: block;
}

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem);
}
.flow--space-small {
  --flow-space: 0.5rem;
}

.container {
  padding-inline: 2em;
  margin-inline: auto;
  max-width: 80rem;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}

.skip-to-content {
  position: absolute;
  z-index: 9999;
  background: var(--primary-bg);
  color: var(--primary-clr);
  padding: 0.5em 1em;
  margin-inline: auto;
  transform: translateY(-100%);
  transition: transform 250ms ease-in;
}

.skip-to-content:focus {
  transform: translateY(0);
}

/* colors */

.primary-bg {
  background-color: var(--primary-bg);
}

.primary-clr {
  color: var(--primary-clr);
}

.accent-clr {
  color: var(--accent-clr);
}

.highlight-clr {
  color: hsl(var(--clr-highlight));
}

/* typography */

.ff-serif {
  font-family: var(--ff-serif);
}
.ff-sans-cond {
  font-family: var(--ff-sans-cond);
}
.ff-sans-normal {
  font-family: var(--ff-sans-normal);
}

.letter-spacing-1 {
  letter-spacing: 4.75px;
}
.letter-spacing-2 {
  letter-spacing: 2.7px;
}
.letter-spacing-3 {
  letter-spacing: 2.35px;
}

.uppercase {
  text-transform: uppercase;
}

.fs-900 {
  font-size: var(--fs-900);
}
.fs-800 {
  font-size: var(--fs-800);
}
.fs-700 {
  font-size: var(--fs-700);
}
.fs-600 {
  font-size: var(--fs-600);
}
.fs-500 {
  font-size: var(--fs-500);
}
.fs-400 {
  font-size: var(--fs-400);
}
.fs-300 {
  font-size: var(--fs-300);
}
.fs-200 {
  font-size: var(--fs-200);
}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
  line-height: 1.1;
}

.numbered-title {
  font-family: var(--ff-sans-cond);
  font-size: var(--fs-500);
  letter-spacing: 4.72px;
  position: relative;
  text-transform: uppercase;

  &.flex {
    align-items: center;
  }

  @media (min-width: 35rem) {
    &::after {
      content: "";
      display: block;
      position: relative;
      height: 1px;
      width: 300px;
      background: light-dark(
        hsl(var(--clr-dark) / 0.25),
        hsl(var(--clr-white) / 0.25)
      );
    }
  }
}

.numbered-title span {
  margin-right: 0.5em;
  font-weight: 700;
  align-self: start;
}

.scroll {
  display: inline-block;
}

.scroll-icon {
  width: 30px;

  .circle {
    fill: hsl(var(--clr-highlight));
  }
}

.material-symbols-outlined {
  font-family: "Material Icons";
  font-weight: normal;
  font-style: normal;
  font-size: 24px; /* Preferred icon size */
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;

  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;

  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;

  /* Support for IE. */
  font-feature-settings: "liga";
}

.tech-stack {
  display: grid;
  grid-template-columns: repeat(2, minmax(140px, 200px));
  padding: 0;
  list-style-position: inside;

  li::marker {
    content: "â–¹";
    color: hsl(var(--clr-highlight));
  }
}

.grayscale-img {
  @media (min-width: 35rem) {
    mix-blend-mode: multiply;
    filter: grayscale(100%);
    transform: translate(0);
    transition: filter 250ms var(--easing), mix-blend-mode 250ms var(--easing),
      transform 250ms var(--easing);
    width: 100%;

    &:hover {
      transform: translate(-4px, -4px);
      filter: none;
      mix-blend-mode: normal;
    }
  }
}
